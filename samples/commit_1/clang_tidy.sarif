{
  "version": "2.1.0",
  "$schema": "http://json.schemastore.org/sarif-2.1.0-rtm.5",
  "properties": {
    "comment": "clang-tidy output converted to SARIF by ament_clang_tidy"
  },
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "clang-tidy",
          "version": "10.0.0",
          "informationUri": "https://clang.llvm.org/extra/clang-tidy/",
          "rules": [
            {
              "id": "google-explicit-constructor",
              "shortDescription": {
                "text": "single-argument constructors must be marked explicit to avoid unintentional implicit conversions"
              },
              "helpUri": "https://clang.llvm.org/extra/clang-tidy/checks/list.html"
            },
            {
              "id": "google-explicit-constructor",
              "shortDescription": {
                "text": "single-argument constructors must be marked explicit to avoid unintentional implicit conversions"
              },
              "helpUri": "https://clang.llvm.org/extra/clang-tidy/checks/list.html"
            }
          ]
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/include/rcpputils/filesystem_helper.hpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/asserts.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/env.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/filesystem_helper.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/find_library.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/shared_library.cpp"
          }
        }
      ],
      "results": [
        {
          "ruleId": "google-explicit-constructor",
          "level": "warning",
          "kind": "review",
          "message": {
            "text": "  path(const std::string & p);  // NOLINT(runtime/explicit): this is a conversion constructor\n  ^\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/root/src/spaceros_ws/src/rcpputils/include/rcpputils/filesystem_helper.hpp",
                  "index": 0
                },
                "region": {
                  "startLine": "89",
                  "startColumn": "3"
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-explicit-constructor",
          "level": "warning",
          "kind": "review",
          "message": {
            "text": "  path(const std::string & p);  // NOLINT(runtime/explicit): this is a conversion constructor\n  ^\n  explicit\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/root/src/spaceros_ws/src/rcpputils/include/rcpputils/filesystem_helper.hpp",
                  "index": 0
                },
                "region": {
                  "startLine": "89",
                  "startColumn": "3"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "clang-tidy",
          "version": "10.0.0",
          "informationUri": "https://clang.llvm.org/extra/clang-tidy/",
          "rules": [
            {
              "id": "google-explicit-constructor",
              "shortDescription": {
                "text": "single-argument constructors must be marked explicit to avoid unintentional implicit conversions"
              },
              "helpUri": "https://clang.llvm.org/extra/clang-tidy/checks/list.html"
            },
            {
              "id": "google-explicit-constructor",
              "shortDescription": {
                "text": "single-argument constructors must be marked explicit to avoid unintentional implicit conversions"
              },
              "helpUri": "https://clang.llvm.org/extra/clang-tidy/checks/list.html"
            }
          ]
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/include/rcpputils/filesystem_helper.hpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/asserts.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/env.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/filesystem_helper.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/find_library.cpp"
          }
        },
        {
          "location": {
            "uri": "/root/src/spaceros_ws/src/rcpputils/src/shared_library.cpp"
          }
        }
      ],
      "results": [
        {
          "ruleId": "google-explicit-constructor",
          "level": "warning",
          "kind": "review",
          "message": {
            "text": "  path(const std::string & p);  // NOLINT(runtime/explicit): this is a conversion constructor\n  ^\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/root/src/spaceros_ws/src/rcpputils/include/rcpputils/filesystem_helper.hpp",
                  "index": 0
                },
                "region": {
                  "startLine": "89",
                  "startColumn": "3"
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-explicit-constructor",
          "level": "warning",
          "kind": "review",
          "message": {
            "text": "  path(const std::string & p);  // NOLINT(runtime/explicit): this is a conversion constructor\n  ^\n  explicit\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/root/src/spaceros_ws/src/rcpputils/include/rcpputils/filesystem_helper.hpp",
                  "index": 0
                },
                "region": {
                  "startLine": "89",
                  "startColumn": "3"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}